name: 测试邮件发送

on:
  workflow_dispatch:

jobs:
  test-email:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Test new config system
        env:
          EMAIL_ENABLED: ${{ secrets.EMAIL_ENABLED || 'true' }}
          EMAIL_SMTP_SERVER: ${{ secrets.EMAIL_SMTP_SERVER || 'smtp.qq.com' }}
          EMAIL_SMTP_PORT: ${{ secrets.EMAIL_SMTP_PORT || '465' }}
          EMAIL_USE_TLS: ${{ secrets.EMAIL_USE_TLS || 'false' }}
          EMAIL_USERNAME: ${{ secrets.EMAIL_USERNAME }}
          EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
          EMAIL_TO: ${{ secrets.EMAIL_TO }}
          EMAIL_SUBJECT_TEMPLATE: ${{ secrets.EMAIL_SUBJECT_TEMPLATE || '📈 GitHub Actions测试 - {date}' }}
        run: |
          echo "🔍 测试新配置系统..."
          echo "环境变量检查:"
          echo "EMAIL_USERNAME: ${{ secrets.EMAIL_USERNAME != '' && '已设置' || '未设置' }}"
          echo "EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD != '' && '已设置' || '未设置' }}"
          echo "EMAIL_TO: ${{ secrets.EMAIL_TO != '' && '已设置' || '未设置' }}"
          
          # 测试新配置系统
          python -c "
          from core.env_config import env_config
          env_config.print_config_status()
          
          if env_config.validate_email_config():
              print('✅ 配置验证通过')
          else:
              print('❌ 配置验证失败')
              exit(1)
          "
          
          # 如果调试成功，再测试完整功能
          if [ $? -eq 0 ]; then
            echo "✅ 调试成功，测试完整邮件功能..."
            
            # 创建测试结果文件
            mkdir -p results
            cat > results/test.json << EOF
            [
                {
                    "code": "000001",
                    "name": "平安银行",
                    "score": 85.5,
                    "price": 12.34,
                    "market_cap": 1234.5,
                    "reasons": ["技术指标优秀", "基本面良好"]
                }
            ]
            EOF
            
            # 测试邮件发送
            python -c "
            from core.email_sender import send_notification_email
            from core.env_config import env_config
            import os
            
            email_config = env_config.get_email_config()
            success = send_notification_email(
                strategy_name='comprehensive',
                results_file='results/test.json',
                config=email_config
            )
            
            if success:
                print('✅ GitHub Actions邮件测试成功！')
            else:
                print('❌ GitHub Actions邮件测试失败！')
                exit(1)
            "
          else
            echo "❌ 调试失败，请检查GitHub Secrets配置"
            exit(1)
          fi 